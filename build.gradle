buildscript {
    repositories {
        jcenter()
        maven {
            name = "forge"
            url = "http://files.minecraftforge.net/maven"
        }
        maven {
            name = "sonatype"
            url = "https://oss.sonatype.org/content/repositories/snapshots/"
        }
    }
    dependencies {
        classpath 'net.minecraftforge.gradle:ForgeGradle:2.2-SNAPSHOT'
    }
}

apply plugin: 'net.minecraftforge.gradle.forge'
apply plugin: 'maven-publish'

version = "0.9.8.2.2"
def ENV = System.getenv()
if (ENV.DRONE_BUILD_NUMBER) {
    version += ".n" + ENV.DRONE_BUILD_NUMBER
}

group= "ivorius.reccomplex" // http://maven.apache.org/guides/mini/guide-naming-conventions.html
archivesBaseName = "RecurrentComplex"

minecraft {
    version = "1.9.4-12.17.0.1976"
    runDir = "eclipse"
    mappings = "stable_26"
    useDepAts = true
}

dependencies {
    deobfCompile 'ivorius.ivtoolkit:IvToolkit:1.2.7.2'
}

processResources
{
    // this will ensure that this task is redone when the versions change.
    inputs.property "version", project.version
    inputs.property "mcversion", project.minecraft.version

    // replace stuff in mcmod.info, nothing else
    from(sourceSets.main.resources.srcDirs) {
        include 'mcmod.info'
                
        // replace version and mcversion
        expand 'version':project.version, 'mcversion':project.minecraft.version
    }
        
    // copy everything else, thats not the mcmod.info
    from(sourceSets.main.resources.srcDirs) {
        exclude 'mcmod.info'
    }
}

sourceCompatibility = 1.8
targetCompatibility = 1.8

publishing {
    tasks.publish.dependsOn 'build'
    publications {
        mavenJava(MavenPublication) {
            artifact jar
            artifact sourceJar
        }
        mavenCustom(MavenPublication) {
            pom.withXml {
                asNode().appendNode('description', 'Handles structures for the game Minecraft')
                asNode().appendNode('url', 'https://github.com/Ivorforce/RecurrentComplex')
            }
        }
    }
    repositories {
        if (project.hasProperty('mavenUrl')) {
            maven {
                url project."mavenUrl"
                if (project.hasProperty('mavenUser') && project.hasProperty('mavenPassword')) {
                    credentials {
                        username project."mavenUser"
                        password project."mavenPassword"
                    }
                }
            }
        } else {
            mavenLocal()
        }
    }
}
